# Find the shortest path in an unweighted graph:

from collections import deque

def shortest_path(n, edges, src):
    adj = [[] for i in range(n)]
    for u, v in edges:
        adj[u].append(v)
        adj[v].append(u)

    dist = [-1] * n
    dist[src] = 0

    q = deque([src])
    while q:
        u = q.popleft()
        for v in adj[u]:
            if dist[v] == -1: 
                dist[v] = dist[u] + 1
                q.append(v)

    return dist
